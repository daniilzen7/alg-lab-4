#1 что хранить в ДП - максимальное значение непрерывной последовательности для текущего символа(ans[i])
#текущая возрастающая последовательность(cur[i])
#2 база - cur[0] = 1
#ans[0] = 1 - у одного символа уже длина 1
#3 переход если текущий символ больше предыдущего - сравниваем текущую посл с максимальной - обновляем максимум(cur[i - 1] + 1, ans[i-1])
#если cur[i] > ans[i-1] в temp идет текущая последовательность(?)
#если cur[i] < ans[i-1] в temp идет ничего
#если текущий символ меньше предыдущего - обнуляем текущую последовательность - в temp идет ничего
#4 порядок обхода - слева направо
#5 где ответ? - ans[n] - n - длина массива

# работа с последовательностями
#1 что хранить в ДП - два списка - текущую последовательность(temp) и наибольшую(p)
#p = []
#temp = []
#2 база - p[0] = [s[0]]
#temp[0] = [s[0]]

#3 переход если s[i] > s[i - 1] То temp.append(s[i]) иначе temp обнуляется и его первый элемент становится равен s[i]
#в конце цикла сравниваются длины temp и p

#4 порядок обхода - cktdf yfghfdj
#5 где ответ? - p
def lcs(s):
    n = len(s) - 1
    ans = [0] * (n + 1)#максимальная возрастающая посл до i-го символа
    cur = [0] * (n + 1)#значение текущей возрастающей последовательности
    p = []
    temp = []

    ans[0] = 1
    cur[0] = 1
    temp.append(s[0])
    p.append(s[0])
    for i in range(1, n + 1):
        if s[i] > s[i - 1]:
            temp.append(s[i])
            cur[i] = cur[i - 1] + 1
            if ans[i - 1] > cur[i]:
                ans[i] = ans[i - 1]
            else:
                ans[i] = cur[i]
        else:
            temp = []
            temp.append(s[i])
            cur[i] = 1
            ans[i] = ans[i - 1]

        if len(temp) > len(p):
            p = temp
    print(ans[n])
    return p
a = input('Put the a-numbers with spaces: ').split()
for i in range (len(a)):
    try:
        a[i] = int(a[i])
    except:
        print('Put only numbers!')
print('p:', lcs(a))
